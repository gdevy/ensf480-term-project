package client.userInterface;

import javax.swing.*;
import javax.swing.text.NumberFormatter;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import java.text.NumberFormat;

public class pnlRenterSearch {
    private JTextField txtCity;
    private JComboBox cmbQuadrant;
    private JComboBox cmbPropertyType;
    private JFormattedTextField txtBedrooms;
    private JFormattedTextField txtBathrooms;
    private JFormattedTextField txtSquareFootage;
    private JCheckBox chkFurnished;
    private JTextField txtProvince;
    private JButton searchButton;
    private JFormattedTextField txtRent;
    private JComboBox cmbRentEquals;
    private JComboBox cmbFeetEquals;
    private JPanel pnlRenterSearch;
    private JComboBox cmbFurnished;

    public JComboBox getCmbQuadrant() {
        return cmbQuadrant;
    }

    public JComboBox getCmbFurnished() {
        return cmbFurnished;
    }

    private GUIController controller;

    public JComboBox getCmbPropertyType() {
        return cmbPropertyType;
    }

    public pnlRenterSearch() {
        $$$setupUI$$$();
        searchButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                controller.PropertySearch();
            }
        });
    }

    public void setController(GUIController controller) {
        this.controller = controller;
    }

    public JPanel getPnlRenterSearch() {
        return pnlRenterSearch;
    }


    public String getTxtBedrooms() {
        return txtBedrooms.getText();
    }

    public String getTxtBathrooms() {
        return txtBathrooms.getText();
    }

    public String getTxtSquareFootage() {
        return txtSquareFootage.getText();
    }

    public String getTxtRent() {
        return txtRent.getText();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        pnlRenterSearch = new JPanel();
        pnlRenterSearch.setLayout(new GridBagLayout());
        final JLabel label1 = new JLabel();
        label1.setText("Search for Properties:");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        pnlRenterSearch.add(label1, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.VERTICAL;
        pnlRenterSearch.add(spacer1, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("Filter By:");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.WEST;
        pnlRenterSearch.add(label2, gbc);
        final JLabel label3 = new JLabel();
        label3.setText("Property Type:");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        pnlRenterSearch.add(label3, gbc);
        final JLabel label4 = new JLabel();
        label4.setText("Minimum Bedrooms:");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 4;
        gbc.anchor = GridBagConstraints.WEST;
        pnlRenterSearch.add(label4, gbc);
        final JLabel label5 = new JLabel();
        label5.setText("Minimum Bathrooms:");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 5;
        gbc.anchor = GridBagConstraints.WEST;
        pnlRenterSearch.add(label5, gbc);
        final JLabel label6 = new JLabel();
        label6.setText("Minimum Square Footage:");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 6;
        gbc.anchor = GridBagConstraints.WEST;
        pnlRenterSearch.add(label6, gbc);
        final JLabel label7 = new JLabel();
        label7.setText("Furnished:");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 7;
        gbc.anchor = GridBagConstraints.WEST;
        pnlRenterSearch.add(label7, gbc);
        gbc = new GridBagConstraints();
        gbc.gridx = 6;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        pnlRenterSearch.add(cmbPropertyType, gbc);
        txtBedrooms.setMinimumSize(new Dimension(120, 30));
        txtBedrooms.setOpaque(true);
        txtBedrooms.setPreferredSize(new Dimension(120, 30));
        gbc = new GridBagConstraints();
        gbc.gridx = 6;
        gbc.gridy = 4;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        pnlRenterSearch.add(txtBedrooms, gbc);
        txtBathrooms.setMinimumSize(new Dimension(120, 30));
        txtBathrooms.setPreferredSize(new Dimension(120, 30));
        gbc = new GridBagConstraints();
        gbc.gridx = 6;
        gbc.gridy = 5;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        pnlRenterSearch.add(txtBathrooms, gbc);
        txtSquareFootage.setMinimumSize(new Dimension(120, 30));
        txtSquareFootage.setOpaque(true);
        txtSquareFootage.setPreferredSize(new Dimension(120, 30));
        gbc = new GridBagConstraints();
        gbc.gridx = 6;
        gbc.gridy = 6;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        pnlRenterSearch.add(txtSquareFootage, gbc);
        final JLabel label8 = new JLabel();
        label8.setText("Quadrant:");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        pnlRenterSearch.add(label8, gbc);
        final JLabel label9 = new JLabel();
        label9.setText("City:");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.anchor = GridBagConstraints.WEST;
        pnlRenterSearch.add(label9, gbc);
        txtCity = new JTextField();
        txtCity.setMinimumSize(new Dimension(120, 30));
        txtCity.setPreferredSize(new Dimension(120, 30));
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 4;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        pnlRenterSearch.add(txtCity, gbc);
        final JLabel label10 = new JLabel();
        label10.setText("Province: ");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 5;
        gbc.anchor = GridBagConstraints.WEST;
        pnlRenterSearch.add(label10, gbc);
        txtProvince = new JTextField();
        txtProvince.setMinimumSize(new Dimension(120, 30));
        txtProvince.setOpaque(true);
        txtProvince.setPreferredSize(new Dimension(120, 30));
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 5;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        pnlRenterSearch.add(txtProvince, gbc);
        searchButton = new JButton();
        searchButton.setText("Search");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 9;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        pnlRenterSearch.add(searchButton, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 8;
        gbc.fill = GridBagConstraints.VERTICAL;
        pnlRenterSearch.add(spacer2, gbc);
        final JLabel label11 = new JLabel();
        label11.setText("Max Monthly Rent:");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 7;
        gbc.anchor = GridBagConstraints.WEST;
        pnlRenterSearch.add(label11, gbc);
        txtRent.setMinimumSize(new Dimension(120, 30));
        txtRent.setPreferredSize(new Dimension(120, 30));
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 7;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        pnlRenterSearch.add(txtRent, gbc);
        final JPanel spacer3 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 5;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        pnlRenterSearch.add(spacer3, gbc);
        final JPanel spacer4 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        pnlRenterSearch.add(spacer4, gbc);
        final JPanel spacer5 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        pnlRenterSearch.add(spacer5, gbc);
        gbc = new GridBagConstraints();
        gbc.gridx = 6;
        gbc.gridy = 7;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        pnlRenterSearch.add(cmbFurnished, gbc);
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.WEST;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        pnlRenterSearch.add(cmbQuadrant, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return pnlRenterSearch;
    }

    private void createUIComponents() {
        NumberFormat format = NumberFormat.getInstance();
        NumberFormatter formatter = new NumberFormatter(format);
        formatter.setValueClass(Integer.class);
        formatter.setMinimum(0);
        formatter.setMaximum(Integer.MAX_VALUE);
        formatter.setAllowsInvalid(false);
        // If you want the value to be committed on each keystroke instead of focus lost
        formatter.setCommitsOnValidEdit(true);

        txtBathrooms = new JFormattedTextField(formatter);
        txtBedrooms = new JFormattedTextField(formatter);
        txtRent = new JFormattedTextField(formatter);
        //Square feet is int
        txtSquareFootage = new JFormattedTextField(formatter);
        cmbPropertyType = new JComboBox();
        cmbPropertyType.addItem("HOUSE");
        cmbPropertyType.addItem("DUPLEX");
        cmbPropertyType.addItem("TOWNHOUSE");
        cmbPropertyType.addItem("APARTMENT");
        cmbPropertyType.addItem("CONDO");
        cmbPropertyType.addItem("MAINFLOOR");
        cmbPropertyType.addItem("BASEMENT");
        cmbPropertyType.setSelectedIndex(-1);
        cmbQuadrant = new JComboBox();
        cmbQuadrant.addItem("NW");
        cmbQuadrant.addItem("NE");
        cmbQuadrant.addItem("SW");
        cmbQuadrant.addItem("SE");
        cmbQuadrant.setSelectedIndex(-1);
        cmbFurnished = new JComboBox();
        cmbFurnished.addItem("EITHER");
        cmbFurnished.addItem("FURNISHED");
        cmbFurnished.addItem("UNFURNISHED");
        cmbFurnished.setSelectedIndex(-1);
    }
}
